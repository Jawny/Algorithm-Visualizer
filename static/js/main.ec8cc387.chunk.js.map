{"version":3,"sources":["node/Node.js","algorithms/BreadthFirstSearch.js","algorithms/DepthFirstSearch.js","algorithms/Astar.js","grid/Grid.js","App.js","index.js"],"names":["Node","isStart","isEnd","isVisited","classes","className","searchThroughNeighboursHelper","node","grid","visited","queue","x","y","length","has","add","push","BFS","Set","curr","res","shift","DFS","i","j","getNeighbours","heruistic","a","b","Math","abs","Astar","start","end","openList","closedList","lowInd","f","currNode","temp","previous","indexOfItemToRemove","indexOf","splice","neighbours","neighbour","includes","tempG","g","newPath","h","NODE_START_ROW","NODE_START_COL","NODE_END_ROW","NODE_END_COL","Grid","useState","setGrid","useEffect","createGrid","Array","createSpot","Spot","this","parent","runAlgorithm","resultNodes","interval","setInterval","newGrid","JSON","parse","stringify","clearInterval","clearGrid","gridWithNode","map","rowOfSpots","rowIndex","key","spot","spotIndex","deepCopyAndSetGridState","onClick","reverse","type","placeholder","name","onChange","event","target","value","isNaN","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec8cc387.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Node.css\";\n\nconst Node = ({ isStart, isEnd, isVisited }) => {\n  let classes = \"\";\n  if (isStart) {\n    classes += \"node-start\";\n  } else if (isEnd) {\n    classes += \"node-end\";\n  } else if (isVisited) {\n    classes += \"node-visited\";\n  }\n\n  return <div className={`node ${classes}`}></div>;\n};\nexport default Node;\n","function BFS(node, grid) {\n  let queue = [node];\n  let visited = new Set();\n  visited.add(node);\n  let res = [];\n\n  let curr;\n  while (queue.length !== 0) {\n    curr = queue.shift();\n    res.push(curr);\n    searchThroughNeighboursHelper(curr, grid, visited, queue);\n  }\n  return res;\n}\nfunction searchThroughNeighboursHelper(node, grid, visited, queue) {\n  let x = node.x;\n  let y = node.y;\n\n  // add right neighbour\n  if (x < grid[0].length - 1 && !visited.has(grid[x + 1][y])) {\n    visited.add(grid[x + 1][y]);\n    queue.push(grid[x + 1][y]);\n  }\n  // add bottom neighbour\n  if (y < grid.length - 1 && !visited.has(grid[x][y + 1])) {\n    visited.add(grid[x][y + 1]);\n    queue.push(grid[x][y + 1]);\n  }\n  // add left neighbour\n  if (x > 0 && !visited.has(grid[x - 1][y])) {\n    visited.add(grid[x - 1][y]);\n    queue.push(grid[x - 1][y]);\n  }\n  // add top neighbour\n  if (y > 0 && !visited.has(grid[x][y - 1])) {\n    visited.add(grid[x][y - 1]);\n    queue.push(grid[x][y - 1]);\n  }\n}\n\nexport default BFS;\n","function DFS(node, grid) {\n  let visited = new Set();\n  let res = [];\n\n  searchThroughNeighboursHelper(grid, res, visited, node.x, node.y);\n  return res;\n}\n\nfunction searchThroughNeighboursHelper(grid, res, visited, i, j) {\n  if (\n    i >= 0 &&\n    j >= 0 &&\n    i < grid.length &&\n    j < grid[0].length &&\n    !visited.has(grid[i][j])\n  ) {\n    visited.add(grid[i][j]);\n    res.push(grid[i][j]);\n    searchThroughNeighboursHelper(grid, res, visited, i + 1, j);\n    searchThroughNeighboursHelper(grid, res, visited, i - 1, j);\n    searchThroughNeighboursHelper(grid, res, visited, i, j + 1);\n    searchThroughNeighboursHelper(grid, res, visited, i, j - 1);\n  }\n}\n\nexport default DFS;\n","function Astar(start, end, grid) {\n  let openList = [];\n  let closedList = [];\n  let res = [];\n\n  openList.push(start);\n\n  while (openList.length > 0) {\n    let lowInd = 0;\n    for (let i = 0; i < openList.length; i++) {\n      if (openList[i].f < openList[lowInd].f) {\n        lowInd = i;\n      }\n    }\n    let currNode = openList[lowInd];\n    // if statement below does not run\n    if (currNode === end) {\n      let temp = currNode;\n      res.push(temp);\n      while (temp.previous) {\n        res.push(temp.previous);\n        temp = temp.previous;\n      }\n      return res;\n    }\n\n    let indexOfItemToRemove = openList.indexOf(currNode);\n    openList.splice(indexOfItemToRemove, 1);\n    closedList.push(currNode);\n\n    let neighbours = getNeighbours(currNode, grid);\n\n    for (let i = 0; i < neighbours.length; i++) {\n      let neighbour = neighbours[i];\n      if (!closedList.includes(neighbour)) {\n        let tempG = currNode.g + 1;\n        let newPath = false;\n        if (openList.includes(neighbour)) {\n          if (tempG < neighbour.g) {\n            neighbour.g = tempG;\n            newPath = true;\n          }\n        } else {\n          neighbour.g = tempG;\n          newPath = true;\n          openList.push(neighbour);\n        }\n        if (newPath) {\n          neighbour.h = heruistic(neighbour, end);\n          neighbour.f = neighbour.g + neighbour.h;\n          neighbour.previous = currNode;\n        }\n      }\n    }\n  }\n}\n\nfunction getNeighbours(node, grid) {\n  let x = node.x;\n  let y = node.y;\n  let res = [];\n  // add right neighbour\n  if (x < grid[0].length - 1) {\n    res.push(grid[x + 1][y]);\n  }\n  // add bottom neighbour\n  if (y < grid.length - 1) {\n    res.push(grid[x][y + 1]);\n  }\n  // add left neighbour\n  if (x > 0) {\n    res.push(grid[x - 1][y]);\n  }\n  // add top neighbour\n  if (y > 0) {\n    res.push(grid[x][y - 1]);\n  }\n  return res;\n}\n\nfunction heruistic(a, b) {\n  let d = Math.abs(a.x - a.y) + Math.abs(b.x - b.y);\n  return d;\n}\n\nexport default Astar;\n","import React, { useState, useEffect } from \"react\";\nimport Node from \"../node/Node\";\nimport \"./Grid.css\";\nimport BFS from \"../algorithms/BreadthFirstSearch\";\nimport DFS from \"../algorithms/DepthFirstSearch\";\nimport Astar from \"../algorithms/Astar\";\n\nconst cols = 20;\nconst rows = 20;\n\nlet NODE_START_ROW = 10;\nlet NODE_START_COL = 5;\nlet NODE_END_ROW = 10;\nlet NODE_END_COL = 19;\n\nconst Grid = () => {\n  const [grid, setGrid] = useState([]);\n\n  useEffect(() => {\n    createGrid();\n  }, []);\n\n  const createGrid = () => {\n    const grid = new Array(rows);\n    for (let i = 0; i < rows; i++) {\n      grid[i] = new Array(cols);\n    }\n    createSpot(grid);\n    setGrid(grid);\n  };\n\n  const createSpot = (grid) => {\n    // create spots\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        grid[i][j] = new Spot(i, j);\n      }\n    }\n  };\n\n  // Spot constructor\n  function Spot(i, j) {\n    this.x = i;\n    this.y = j;\n    this.g = 0;\n    this.h = 0;\n    this.f = 0;\n    this.previous = null;\n    this.parent = null;\n    this.isVisited = false;\n    this.isStart = this.x === NODE_START_ROW && this.y === NODE_START_COL;\n    this.isEnd = this.x === NODE_END_ROW && this.y === NODE_END_COL;\n  }\n\n  // resultNodes = result steps to play back algorithm\n  const runAlgorithm = (resultNodes) => {\n    let interval = setInterval(function () {\n      if (\n        resultNodes[0] === grid[NODE_END_ROW][NODE_END_COL] ||\n        resultNodes.length === 0\n      ) {\n        clearInterval(interval);\n        return;\n      }\n      let curr = resultNodes.shift();\n\n      let newGrid = [];\n\n      for (let i = 0; i < grid.length; i++) {\n        newGrid.push([]);\n        for (let j = 0; j < grid[0].length; j++) {\n          newGrid[i].push(0);\n        }\n      }\n\n      for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < cols; j++) {\n          newGrid[i][j] = JSON.parse(JSON.stringify(grid[i][j]));\n        }\n      }\n\n      if (!curr.isStart && !curr.isEnd) {\n        grid[curr.x][curr.y].isVisited = true;\n        newGrid[curr.x][curr.y].isVisited = true;\n      }\n      setGrid(newGrid);\n    }, 50);\n  };\n\n  //clear the grid and reset it to default\n  const clearGrid = () => {\n    let newGrid = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      newGrid.push([]);\n      for (let j = 0; j < grid[0].length; j++) {\n        newGrid[i].push(0);\n      }\n    }\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        grid[i][j].isVisited = false;\n        newGrid[i][j] = JSON.parse(JSON.stringify(grid[i][j]));\n      }\n    }\n\n    setGrid(newGrid);\n  };\n\n  // Create grid with nodes\n  const gridWithNode = (\n    <div className=\"d-inline-block\">\n      <div>\n        {grid.map((rowOfSpots, rowIndex) => {\n          return (\n            <div key={rowIndex} className=\"row\">\n              {rowOfSpots.map((spot, spotIndex) => {\n                // the line below this comment is same as the 3 commented lines below\n                const { isStart, isEnd, isVisited } = spot;\n                // const isStart = spot.isStart;\n                // const isEnd = spot.isEnd;\n                // const isVisited = spot.isVisited;\n                return (\n                  <Node\n                    key={spotIndex}\n                    isStart={isStart}\n                    isEnd={isEnd}\n                    isVisited={isVisited}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n  // Change start node Row position\n  const handleStartChangeRow = (event) => {\n    // Set current starting node to false\n    grid[NODE_START_ROW][NODE_START_COL].isStart = false;\n    // check if event value is valid\n    if (event.target.value === \"\" || isNaN(event.target.value)) {\n    } else {\n      NODE_START_ROW = event.target.value;\n    }\n    // set new start row node\n    grid[NODE_START_ROW][NODE_START_COL].isStart = true;\n    deepCopyAndSetGridState(grid);\n  };\n\n  // Change start node Col position\n  const handleStartChangeCol = (event) => {\n    // Set current starting node to false\n    grid[NODE_START_ROW][NODE_START_COL].isStart = false;\n    // check if event value is valid\n    if (event.target.value === \"\" || isNaN(event.target.value)) {\n    } else {\n      NODE_START_COL = event.target.value;\n    }\n    // set new start col node\n    grid[NODE_START_ROW][NODE_START_COL].isStart = true;\n    deepCopyAndSetGridState(grid);\n  };\n  // Change end node Row position\n  const handleEndChangeRow = (event) => {\n    // Set current starting node to false\n    grid[NODE_END_ROW][NODE_END_COL].isEnd = false;\n    // check if event value is valid\n    if (event.target.value === \"\" || isNaN(event.target.value)) {\n    } else {\n      NODE_END_ROW = event.target.value;\n    }\n    // set new start row node\n    grid[NODE_END_ROW][NODE_END_COL].isEnd = true;\n    deepCopyAndSetGridState(grid);\n  };\n  // Change end node Col position\n  const handleEndChangeCol = (event) => {\n    // Set current end node to false\n    grid[NODE_END_ROW][NODE_END_COL].isEnd = false;\n    // check if event value is valid\n    if (event.target.value === \"\" || isNaN(event.target.value)) {\n    } else {\n      NODE_END_COL = event.target.value;\n    }\n    // set new end col node\n    grid[NODE_END_ROW][NODE_END_COL].isEnd = true;\n    deepCopyAndSetGridState(grid);\n  };\n\n  const deepCopyAndSetGridState = (grid) => {\n    let newGrid = [];\n    for (let i = 0; i < grid.length; i++) {\n      newGrid.push([]);\n      for (let j = 0; j < grid[0].length; j++) {\n        newGrid[i].push(0);\n      }\n    }\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        newGrid[i][j] = JSON.parse(JSON.stringify(grid[i][j]));\n      }\n    }\n    setGrid(newGrid);\n  };\n\n  return (\n    <div className=\"screen\">\n      <h1> Algorithm Visualizer </h1>\n      <div>{gridWithNode}</div>\n      <button\n        className=\"btn btn-primary mr-1\"\n        onClick={() => {\n          clearGrid();\n          runAlgorithm(BFS(grid[NODE_START_ROW][NODE_START_COL], grid));\n        }}\n      >\n        Breadth First Search\n      </button>\n      <button\n        className=\"btn btn-primary mr-1\"\n        onClick={() => {\n          clearGrid();\n          runAlgorithm(DFS(grid[NODE_START_ROW][NODE_START_COL], grid));\n        }}\n      >\n        {\" \"}\n        Depth First Search\n      </button>\n      <button\n        className=\"btn btn-primary mr-1\"\n        onClick={() => {\n          clearGrid();\n          runAlgorithm(\n            Astar(\n              grid[NODE_START_ROW][NODE_START_COL],\n              grid[NODE_END_ROW][NODE_END_COL],\n              grid\n            ).reverse()\n          );\n        }}\n      >\n        {\" \"}\n        A Star Search\n      </button>\n      <button\n        className=\"btn btn-primary mr-1\"\n        onClick={() => {\n          clearGrid();\n        }}\n      >\n        Clear Grid\n      </button>\n      <div>\n        <div className=\"pull-left\">\n          <label>\n            Start position\n            {/* start node row */}\n            <input\n              type=\"text\"\n              placeholder=\"Start Node row\"\n              name=\"x-coord\"\n              onChange={handleStartChangeRow}\n            />\n            {/* start node col */}\n            <input\n              type=\"text\"\n              placeholder=\"Start Node column\"\n              name=\"y-coord\"\n              onChange={handleStartChangeCol}\n            />\n          </label>\n        </div>\n        <label>\n          End Position\n          {/* end node row */}\n          <input\n            type=\"text\"\n            placeholder=\"End Node row\"\n            name=\"x-coord\"\n            onChange={handleEndChangeRow}\n          />\n          {/* end node col */}\n          <input\n            type=\"text\"\n            placeholder=\"End Node column\"\n            name=\"y-coord\"\n            onChange={handleEndChangeCol}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Grid;\n","import React from \"react\";\nimport \"./App.css\";\nimport Grid from \"./grid/Grid\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}